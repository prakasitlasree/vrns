'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------
Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized

Namespace EntityModel
    <Serializable()> _
    Partial Public Class VRNS_Employee
        #Region "Primitive Properties"
    
        Public Overridable Property ID As String
    
        Public Overridable Property FNAME_EN As String
    
        Public Overridable Property LNAME_EN As String
    
        Public Overridable Property FNAME_TH As String
    
        Public Overridable Property LNAME_TH As String
    
        Public Overridable Property MOBILE As String
    
        Public Overridable Property MGR_ID As String
    
        Public Overridable Property DEP_CODE As Nullable(Of Integer)
            Get
                Return _dEP_CODE
            End Get
            Set(ByVal value As Nullable(Of Integer))
                Try
                    _settingFK = True
                    If Not Equals (_dEP_CODE, value) Then
                        If VRNS_Department IsNot Nothing AndAlso Not Equals(VRNS_Department.CODE, value) Then
                            VRNS_Department = Nothing
                        End If
                        _dEP_CODE = value
                    End If
                Finally
                    _settingFK = False
                End Try
            End Set
        End Property
        Private _dEP_CODE As Nullable(Of Integer)
    
        Public Overridable Property BRANCH_CODE As String
            Get
                Return _bRANCH_CODE
            End Get
            Set(ByVal value As String)
                Try
                    _settingFK = True
                    If Not Equals (_bRANCH_CODE, value) Then
                        If VRNS_Branch IsNot Nothing AndAlso Not Equals(VRNS_Branch.CODE, value) Then
                            VRNS_Branch = Nothing
                        End If
                        _bRANCH_CODE = value
                    End If
                Finally
                    _settingFK = False
                End Try
            End Set
        End Property
        Private _bRANCH_CODE As String
    
        Public Overridable Property TITLE_CODE As Nullable(Of Integer)
            Get
                Return _tITLE_CODE
            End Get
            Set(ByVal value As Nullable(Of Integer))
                Try
                    _settingFK = True
                    If Not Equals (_tITLE_CODE, value) Then
                        If VRNS_Title IsNot Nothing AndAlso Not Equals(VRNS_Title.CODE, value) Then
                            VRNS_Title = Nothing
                        End If
                        _tITLE_CODE = value
                    End If
                Finally
                    _settingFK = False
                End Try
            End Set
        End Property
        Private _tITLE_CODE As Nullable(Of Integer)
    
        Public Overridable Property LAST_UPD As Nullable(Of Date)
    
        Public Overridable Property LAST_UPD_LOGIN As String
    
        Public Overridable Property LAST_UPD_DISPLAY_NM As String

        #End Region
        #Region "Navigation Properties"
    
        Public Overridable Property VRNS_Branch As VRNS_Branch
            Get
                Return _vRNS_Branch
            End Get
            Set(ByVal value As VRNS_Branch)
                If _vRNS_Branch IsNot value Then
                    Dim previousValue As VRNS_Branch = _vRNS_Branch
                    _vRNS_Branch = value
                    FixupVRNS_Branch(previousValue)
                End If
            End Set
        End Property
        Private _vRNS_Branch As VRNS_Branch
    
        Public Overridable Property VRNS_Department As VRNS_Department
            Get
                Return _vRNS_Department
            End Get
            Set(ByVal value As VRNS_Department)
                If _vRNS_Department IsNot value Then
                    Dim previousValue As VRNS_Department = _vRNS_Department
                    _vRNS_Department = value
                    FixupVRNS_Department(previousValue)
                End If
            End Set
        End Property
        Private _vRNS_Department As VRNS_Department
    
        Public Overridable Property VRNS_Title As VRNS_Title
            Get
                Return _vRNS_Title
            End Get
            Set(ByVal value As VRNS_Title)
                If _vRNS_Title IsNot value Then
                    Dim previousValue As VRNS_Title = _vRNS_Title
                    _vRNS_Title = value
                    FixupVRNS_Title(previousValue)
                End If
            End Set
        End Property
        Private _vRNS_Title As VRNS_Title
        Public Overridable Property VRNS_MA_Team As ICollection(Of VRNS_MA_Team)
            Get
                If _vRNS_MA_Team Is Nothing Then
                    Dim newCollection As New FixupCollection(Of VRNS_MA_Team)
                    AddHandler newCollection.CollectionChanged, AddressOf FixupVRNS_MA_Team
                    _vRNS_MA_Team = newCollection
                End If
                Return _vRNS_MA_Team
            End Get
            Set(ByVal value As ICollection(Of VRNS_MA_Team))
                If _vRNS_MA_Team IsNot value Then
                    Dim previousValue As FixupCollection(Of VRNS_MA_Team) = TryCast(_vRNS_MA_Team, FixupCollection(Of VRNS_MA_Team))
                    If previousValue IsNot Nothing Then
                        RemoveHandler previousValue.CollectionChanged, AddressOf FixupVRNS_MA_Team
                    End If
                    _vRNS_MA_Team = value
                    Dim newValue As FixupCollection(Of VRNS_MA_Team) = TryCast(value, FixupCollection(Of VRNS_MA_Team))
                    If newValue IsNot Nothing Then
                        AddHandler newValue.CollectionChanged, AddressOf FixupVRNS_MA_Team
                    End If
                End If
            End Set
        End Property
        Private _vRNS_MA_Team As ICollection(Of VRNS_MA_Team)
        Public Overridable Property VRNS_Maintainance_Detail As ICollection(Of VRNS_Maintainance_Detail)
            Get
                If _vRNS_Maintainance_Detail Is Nothing Then
                    Dim newCollection As New FixupCollection(Of VRNS_Maintainance_Detail)
                    AddHandler newCollection.CollectionChanged, AddressOf FixupVRNS_Maintainance_Detail
                    _vRNS_Maintainance_Detail = newCollection
                End If
                Return _vRNS_Maintainance_Detail
            End Get
            Set(ByVal value As ICollection(Of VRNS_Maintainance_Detail))
                If _vRNS_Maintainance_Detail IsNot value Then
                    Dim previousValue As FixupCollection(Of VRNS_Maintainance_Detail) = TryCast(_vRNS_Maintainance_Detail, FixupCollection(Of VRNS_Maintainance_Detail))
                    If previousValue IsNot Nothing Then
                        RemoveHandler previousValue.CollectionChanged, AddressOf FixupVRNS_Maintainance_Detail
                    End If
                    _vRNS_Maintainance_Detail = value
                    Dim newValue As FixupCollection(Of VRNS_Maintainance_Detail) = TryCast(value, FixupCollection(Of VRNS_Maintainance_Detail))
                    If newValue IsNot Nothing Then
                        AddHandler newValue.CollectionChanged, AddressOf FixupVRNS_Maintainance_Detail
                    End If
                End If
            End Set
        End Property
        Private _vRNS_Maintainance_Detail As ICollection(Of VRNS_Maintainance_Detail)

        #End Region
        #Region "Association Fixup"
        Private _settingFK As Boolean = False
    
        Private Sub FixupVRNS_Branch(ByVal previousValue As VRNS_Branch)
            If previousValue IsNot Nothing AndAlso previousValue.VRNS_Employee.Contains(Me) Then
                previousValue.VRNS_Employee.Remove(Me)
            End If
            If VRNS_Branch IsNot Nothing Then
                If Not VRNS_Branch.VRNS_Employee.Contains(Me) Then
                    VRNS_Branch.VRNS_Employee.Add(Me)
                End If
                If Not Equals(BRANCH_CODE, VRNS_Branch.CODE) Then
                    BRANCH_CODE = VRNS_Branch.CODE
                End If
            ElseIf Not _settingFK Then
                BRANCH_CODE = Nothing
            End If
        End Sub
    
        Private Sub FixupVRNS_Department(ByVal previousValue As VRNS_Department)
            If previousValue IsNot Nothing AndAlso previousValue.VRNS_Employee.Contains(Me) Then
                previousValue.VRNS_Employee.Remove(Me)
            End If
            If VRNS_Department IsNot Nothing Then
                If Not VRNS_Department.VRNS_Employee.Contains(Me) Then
                    VRNS_Department.VRNS_Employee.Add(Me)
                End If
                If Not Equals(DEP_CODE, VRNS_Department.CODE) Then
                    DEP_CODE = VRNS_Department.CODE
                End If
            ElseIf Not _settingFK Then
                DEP_CODE = Nothing
            End If
        End Sub
    
        Private Sub FixupVRNS_Title(ByVal previousValue As VRNS_Title)
            If previousValue IsNot Nothing AndAlso previousValue.VRNS_Employee.Contains(Me) Then
                previousValue.VRNS_Employee.Remove(Me)
            End If
            If VRNS_Title IsNot Nothing Then
                If Not VRNS_Title.VRNS_Employee.Contains(Me) Then
                    VRNS_Title.VRNS_Employee.Add(Me)
                End If
                If Not Equals(TITLE_CODE, VRNS_Title.CODE) Then
                    TITLE_CODE = VRNS_Title.CODE
                End If
            ElseIf Not _settingFK Then
                TITLE_CODE = Nothing
            End If
        End Sub
        Private Sub FixupVRNS_MA_Team(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
            If e.NewItems IsNot Nothing Then
                For Each item As VRNS_MA_Team In e.NewItems
                    item.VRNS_Employee = Me
                Next
            End If
            If e.OldItems IsNot Nothing Then
                For Each item As VRNS_MA_Team In e.OldItems
                    If item.VRNS_Employee Is Me Then
                        item.VRNS_Employee = Nothing
                    End If
                Next
            End If
        End Sub
        Private Sub FixupVRNS_Maintainance_Detail(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
            If e.NewItems IsNot Nothing Then
                For Each item As VRNS_Maintainance_Detail In e.NewItems
                    item.VRNS_Employee = Me
                Next
            End If
            If e.OldItems IsNot Nothing Then
                For Each item As VRNS_Maintainance_Detail In e.OldItems
                    If item.VRNS_Employee Is Me Then
                        item.VRNS_Employee = Nothing
                    End If
                Next
            End If
        End Sub

        #End Region
    End Class
End Namespace
